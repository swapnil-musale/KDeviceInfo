name: Pull Request Verification

on:
  pull_request:
    branches: [ "master" ]
    types: [ opened, ready_for_review, synchronize ]
    paths-ignore:
      - '**.md'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Cache gradle
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-    

      - name: Grant permission for gradlew
        run: chmod +x gradlew

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build sampleApp
        id: sampleApp
        run: ./gradlew :sampleApp:build --stacktrace

      - name: Build KDeviceInfo
        id: KDeviceInfo
        run: ./gradlew :KDeviceInfo:build --stacktrace

      - name: Run Lint
        id: lint
        run: ./gradlew lint --stacktrace

      - name: Comment Results on PR
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const output = `
            ## Pull Request Verification Results

            **KDeviceInfo Build** ${{ steps.KDeviceInfo.outcome }}
            **sampleApp Build** ${{ steps.sampleApp.outcome }}
            **Project Lint** ${{ steps.lint.outcome }}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })